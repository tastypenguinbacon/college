                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (May  8 2015) (UNIX)
                              4 ; This file was generated Tue Oct 25 12:06:11 2016
                              5 ;--------------------------------------------------------
                              6 	.module cudo
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (DATA)
                             17 ;--------------------------------------------------------
                             18 ; special function bits
                             19 ;--------------------------------------------------------
                             20 	.area RSEG    (DATA)
                             21 ;--------------------------------------------------------
                             22 ; overlayable register banks
                             23 ;--------------------------------------------------------
                             24 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      25 	.ds 8
                             26 ;--------------------------------------------------------
                             27 ; internal ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (DATA)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in internal ram 
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (OVR,DATA)
                             34 ;--------------------------------------------------------
                             35 ; Stack segment in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area	SSEG	(DATA)
   0000                      38 __start__stack:
   0000                      39 	.ds	1
                             40 
                             41 ;--------------------------------------------------------
                             42 ; indirectly addressable internal ram data
                             43 ;--------------------------------------------------------
                             44 	.area ISEG    (DATA)
                             45 ;--------------------------------------------------------
                             46 ; absolute internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area IABS    (ABS,DATA)
                             49 	.area IABS    (ABS,DATA)
                             50 ;--------------------------------------------------------
                             51 ; bit data
                             52 ;--------------------------------------------------------
                             53 	.area BSEG    (BIT)
                             54 ;--------------------------------------------------------
                             55 ; paged external ram data
                             56 ;--------------------------------------------------------
                             57 	.area PSEG    (PAG,XDATA)
                             58 ;--------------------------------------------------------
                             59 ; external ram data
                             60 ;--------------------------------------------------------
                             61 	.area XSEG    (XDATA)
                             62 ;--------------------------------------------------------
                             63 ; absolute external ram data
                             64 ;--------------------------------------------------------
                             65 	.area XABS    (ABS,XDATA)
                             66 ;--------------------------------------------------------
                             67 ; external initialized ram data
                             68 ;--------------------------------------------------------
                             69 	.area XISEG   (XDATA)
                             70 	.area HOME    (CODE)
                             71 	.area GSINIT0 (CODE)
                             72 	.area GSINIT1 (CODE)
                             73 	.area GSINIT2 (CODE)
                             74 	.area GSINIT3 (CODE)
                             75 	.area GSINIT4 (CODE)
                             76 	.area GSINIT5 (CODE)
                             77 	.area GSINIT  (CODE)
                             78 	.area GSFINAL (CODE)
                             79 	.area CSEG    (CODE)
                             80 ;--------------------------------------------------------
                             81 ; interrupt vector 
                             82 ;--------------------------------------------------------
                             83 	.area HOME    (CODE)
   0000                      84 __interrupt_vect:
   0000 02s00r00             85 	ljmp	__sdcc_gsinit_startup
                             86 ;--------------------------------------------------------
                             87 ; global & static initialisations
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area GSINIT  (CODE)
                             91 	.area GSFINAL (CODE)
                             92 	.area GSINIT  (CODE)
                             93 	.globl __sdcc_gsinit_startup
                             94 	.globl __sdcc_program_startup
                             95 	.globl __start__stack
                             96 	.globl __mcs51_genXINIT
                             97 	.globl __mcs51_genXRAMCLEAR
                             98 	.globl __mcs51_genRAMCLEAR
                             99 	.area GSFINAL (CODE)
   0000 02s00r03            100 	ljmp	__sdcc_program_startup
                            101 ;--------------------------------------------------------
                            102 ; Home
                            103 ;--------------------------------------------------------
                            104 	.area HOME    (CODE)
                            105 	.area HOME    (CODE)
   0003                     106 __sdcc_program_startup:
   0003 12s00r00            107 	lcall	_main
                            108 ;	return from main will lock up
   0006 80 FE               109 	sjmp .
                            110 ;--------------------------------------------------------
                            111 ; code
                            112 ;--------------------------------------------------------
                            113 	.area CSEG    (CODE)
                            114 ;------------------------------------------------------------
                            115 ;Allocation info for local variables in function 'main'
                            116 ;------------------------------------------------------------
                            117 ;i                         Allocated to registers r2 r3 
                            118 ;j                         Allocated with name '_main_j_1_1'
                            119 ;------------------------------------------------------------
                            120 ;	cudo.c:1: int main() {
                            121 ;	-----------------------------------------
                            122 ;	 function main
                            123 ;	-----------------------------------------
   0000                     124 _main:
                    0002    125 	ar2 = 0x02
                    0003    126 	ar3 = 0x03
                    0004    127 	ar4 = 0x04
                    0005    128 	ar5 = 0x05
                    0006    129 	ar6 = 0x06
                    0007    130 	ar7 = 0x07
                    0000    131 	ar0 = 0x00
                    0001    132 	ar1 = 0x01
                            133 ;	cudo.c:5: while (i--)
   0000                     134 00111$:
   0000 7A 7F               135 	mov	r2,#0x7F
   0002 7B 00               136 	mov	r3,#0x00
   0004                     137 00101$:
   0004 8A 04               138 	mov	ar4,r2
   0006 8B 05               139 	mov	ar5,r3
   0008 1A                  140 	dec	r2
   0009 BA FF 01            141 	cjne	r2,#0xff,00112$
   000C 1B                  142 	dec	r3
   000D                     143 00112$:
   000D EC                  144 	mov	a,r4
   000E 4D                  145 	orl	a,r5
   000F 60 EF               146 	jz	00111$
   0011 80 F1               147 	sjmp	00101$
                            148 	.area CSEG    (CODE)
                            149 	.area CONST   (CODE)
                            150 	.area XINIT   (CODE)
                            151 	.area CABS    (ABS,CODE)
